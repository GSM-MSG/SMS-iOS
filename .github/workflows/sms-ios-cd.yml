name: iOS CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
      changed:
        description: 'Changes in this version'
        required: true
  push:
    branches:
      - 245-iOS-cd



env:
  KEYCHAIN: ${{ 'sms-ios.keychain' }}

  CERTS_EXPORT_PWD: ${{ secrets.CERT_EXPORT_SECRET }}

  ENCRYPTED_XCCONFIG_PATH: ${{ 'XCConfig.zip.gpg' }}
  DECRYPTED_XCCONFIG_PATH: ${{ 'XCConfig.zip' }}
  XCCONFIG_KEY: ${{ secrets.XCCONFIG_SECRET }}

  ENCRYPTED_PROVISION_FILE_PATH: ${{ 'Tuist/signing/SMS_CD.mobileprovision.gpg' }}
  DECRYPTED_PROVISION_FILE_PATH: ${{ 'Tuist/signing/SMS_CD.mobileprovision' }}
  PROVISION_KEY: ${{ secrets.PROVISION_SECRET }}

  ENCRYPTED_FASTLANE_ENV_SECRET_FILE_PATH: ${{ 'fastlane/.env.default.gpg' }}
  DECRYPTED_FASTLANE_ENV_SECRET_FILE_PATH: ${{ 'fastlane/.env.default' }}
  FASTLANE_ENV_SECRET_KEY: ${{ secrets.FASTLANE_ENV_SECRET }}

  ENCRYPTED_APPSTORE_API_KEY_FILE_PATH: ${{ 'fastlane/SMS-AppStoreKey.json.gpg' }}
  DECRYPTED_APPSTORE_API_KEY_FILE_PATH: ${{ 'fastlane/SMS-AppStoreKey.json' }}
  APPSTORE_API_KEY_KEY: ${{ secrets.APPSTORE_CONNECT_SECRET }}

  ENCRYPTED_MASTER_KEY_FILE_PATH: ${{ 'Tuist/master.key.gpg' }}
  DECRYPTED_MASTER_KEY_FILE_PATH: ${{ 'Tuist/master.key' }}
  MASTER_KEY_KEY: ${{ secrets.MASTER_KEY_SECRET }}


jobs:
  build:
    name: deploy
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        run: |
          # decrypt xcconfig
          gpg -d -o "$DECRYPTED_XCCONFIG_PATH" --pinentry-mode loopback --passphrase "$XCCONFIG_KEY" "$ENCRYPTED_XCCONFIG_PATH"
          unzip "$DECRYPTED_XCCONFIG_PATH"
          rm -rf "$DECRYPTED_XCCONFIG_PATH"
          
          # decrypt fastlane env file
          gpg -d -o "$DECRYPTED_FASTLANE_ENV_SECRET_FILE_PATH" --pinentry-mode loopback --passphrase "$FASTLANE_ENV_SECRET_KEY" "$ENCRYPTED_FASTLANE_ENV_SECRET_FILE_PATH"
          # decrypt provisioning file
          gpg -d -o "$DECRYPTED_PROVISION_FILE_PATH" --pinentry-mode loopback --passphrase "$PROVISION_KEY" "$ENCRYPTED_PROVISION_FILE_PATH"
          # decrypt app store api key
          gpg -d -o "$DECRYPTED_APPSTORE_API_KEY_FILE_PATH" --pinentry-mode loopback --passphrase "$APPSTORE_API_KEY_KEY" "$ENCRYPTED_APPSTORE_API_KEY_FILE_PATH"
          
          # decrypt tuist master key
          gpg -d -o "$DECRYPTED_MASTER_KEY_FILE_PATH" --pinentry-mode loopback --passphrase "$MASTER_KEY_KEY" "$ENCRYPTED_MASTER_KEY_FILE_PATH"


      - name: decrypt
      - name: configure keychain
        run: |
          security create-keychain -p "" "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings

      - name: configure keychain
        run : |
          tuist signing decrypt
          # import cert file to keychain
          security import Tuist/signing/sms-ios.p12 -k "$KEYCHAIN" -P "$CERTS_EXPORT_PWD" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"

          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          # for debugging
          echo `ls tuist/signing/*.mobileprovision`
          # 모든 프로비저닝 프로파일을 rename 하고 위에서 만든 디렉토리로 복사하는 과정
          for PROVISION in `ls tuist/signing/*.mobileprovision`
          do
            UUID=`/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ./$PROVISION)`
            cp "./$PROVISION" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"
          done

      - name: install tuist
        run: curl -Ls https://install.tuist.io | bash

      - name: install fastlane
        run: brew install fastlane

      - name: create .xcodeproj
        run: make ci_generate

      - name: Update Release Note
        run: |
          echo "${{ github.event.inputs.changed }}" > fastlane/metadata/ko/release_notes.txt

      - name: Distribute
        run: fastlane release version:$VERSION
        shell: bash
        env:
          VERSION: ${{ github.event.inputs.version }}
